name: GraalVM Native Image

# https://blogs.oracle.com/developers/post/building-cross-platform-native-images-with-graalvm
# https://github.com/aws-actions/configure-aws-credentials

on:
    workflow_dispatch:
    push:
        tags:
            - "*"

jobs:
    Run:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: GitHub Action for GraalVM
              uses: graalvm/setup-graalvm@v1 # https://github.com/marketplace/actions/github-action-for-graalvm
              with:
                java-version: '20.0.1'
                distribution: 'graalvm' # New 'distribution' option

            - name: Run single command
              run: echo "running pwd"; pwd

            - name: Build via Gradle
              run: ./gradlew build

            - name: JPackage
              run: |
                  echo "https://docs.oracle.com/en/java/javase/20/docs/specs/man/jpackage.html"
                  rm -fr install
                  mkdir install
                  cp build/libs/tcpping-all.jar install/tcpping.jar
                  jpackage --version

            - name: Make Native Image
              run: |
                  cd install
                  native-image -jar tcpping.jar --no-fallback -H:+BuildReport -H:Name=tcpping-linux
                  ./tcpping-linux

            - name: Check AWS CLI
              run: |
                  which aws
                  aws --version

            - name: Set up AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: 'eu-central-1'

            - name: Upload to S3
              run: aws s3 sync install s3://ngm-dev-s3/tcpping/linux

            - name: Upload macos version to S3
              run: aws s3 sync install-macos s3://ngm-dev-s3/tcpping/macos
            
            - name: Create Snap Package
              run: |
                  ls -la
            
            - name: Upload Snap Package
              run: |
                  ls -la
            
            - name: Create Docker Image
              run: |
                  ls -la
            
            - name: Upload Docker Image
              run: |
                  ls -la
